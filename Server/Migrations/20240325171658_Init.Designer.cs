// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server;

#nullable disable

namespace Server.Migrations
{
    [DbContext(typeof(AnswerDbContext))]
    [Migration("20240325171658_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Server.Entities.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnswerToPhrase")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Answer");

                    b.Property<string>("Phrase")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("MyProperty");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnswerToPhrase = "Hello!",
                            Phrase = "Hello"
                        },
                        new
                        {
                            Id = 2,
                            AnswerToPhrase = "I`m good, you?",
                            Phrase = "How are you?"
                        },
                        new
                        {
                            Id = 3,
                            AnswerToPhrase = "See you soon!",
                            Phrase = "Goodbye"
                        },
                        new
                        {
                            Id = 4,
                            AnswerToPhrase = "Pizza)",
                            Phrase = "Your favourite dish?"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
